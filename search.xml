<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[TCP协议总结]]></title>
    <url>%2F2019%2F03%2F11%2FTCP%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[TCP协议是什么TCP协议是提供一种面向连接的、可靠的字节流服务的传输层协议。 什么是面向连接，怎么达到面向连接面向连接就是在通信时，必须先进行连接，建立起一对一的通道。 通过三次握手，四次挥手达到面向连接 什么是可靠的字节流服务，怎么达到可靠性可靠性就是，确保对方无论如何都能够收到全部数据，且数据是正确的。两个应用程序通过 TCP连接交换8 bit的字节构成的字节流。 TCP不在字节流中插入记录标识符，这称为字节流服务( byte stream service)。 通过确认机制和超时重传(让双方知道数据被收到了)，序列号标记(保证数据的顺序和全面)，滑动窗口(控制数据的传输大小)。TCP通过下列方式来提供可靠性: 应用数据被分割成 TCP认为最适合发送的数据块。这和 UDP 完全不同，UDP 应用程序产生的数据报长度将保持不变。由 TCP 传递给 IP 的信息单位称为报文段或段( segment)。我们将看到 TCP 如何确定报文段的长度。 当 TCP 发出一个段后,它启动一个定时器，等待目的端确认收到这个报文段。如果不能及时收到一个确认,将重发这个报文段。我们将了解 TCP 协议中自适应的超时及重传策略。 当 TCP 收到发自 TCP 连接另一端的数据，它将发送一个确认。这个确认不是立即发送,通常将推迟几分之一秒，这将在 下面讨论。 TCP 将保持它首部和数据的检验和。这是一个端到端的检验和,目的是检测数据在传输过程中的任何变化。如果收到段的检验和有差错, TCP 将丢弃这个报文段和不确认收到此报文段(希望发端超时并重发)。 既然TCP 报文段作为 IP 数据报来传输，而 IP 数据报的到达可能会失序，因此 TCP 报文段的到达也可能会失序。如果必要，TCP 将对收到的数据进行重新排序,将收到的数据以正确的顺序交给应用层。 既然 IP 数据报会发生重复，TCP 的接收端必须丢弃重复的数据。 TCP 还能提供流量控制。TCP 连接的每一方都有固定大小的缓冲空间。TCP 的接收端只允许另一端发送接收端缓冲区所能接纳的数据。这将防止较快主机致使较慢主机的缓冲区溢出。]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何搭建个人博客]]></title>
    <url>%2F2019%2F02%2F28%2F%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[开始搭建：https://blog.csdn.net/pan861190079/article/details/80860153更换主题和基本配置：http://theme-next.iissnan.com/getting-started.html个性化配置：http://shenzekun.cn/hexo的next主题个性化配置教程.html]]></content>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
